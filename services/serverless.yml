service: s3-document-api

frameworkVersion: "2"

provider:
  name: "aws"
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: eu-west-2
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - s3:ListBucket
          Resource: arn:aws:s3:::${self:custom.appName}
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:PutObjectTagging
            - s3:GetObjectTagging
          Resource: arn:aws:s3:::${self:custom.appName}/*

  httpApi:
    cors: true
    authorizers:
      customAuthorizer:
        type: request
        functionName: authorizeRequest
        payloadVersion: "2.0"
  

custom:
  appName: ${opt:stage, 'dev'}-s3-document-api

package:
  individually: true

resources:
  Resources:
    DocumentBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.appName}
        AccessControl: Private
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - GET
                - PUT
                - POST
                - HEAD
              AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"

functions:
  writeDocument:
    name: ${self:custom.appName}-write-document
    handler: document-writer/handler.run
    events:
      - httpApi:
          path: /document
          method: post
          authorizer:
            name: customAuthorizer
    environment:
      BUCKET_NAME: ${self:custom.appName}

  listDocumens:
    name: ${self:custom.appName}-list-document
    handler: document-lister/handler.run
    events:
      - httpApi:
          path: /documents
          method: get
          authorizer:
            name: customAuthorizer
    environment:
      BUCKET_NAME: ${self:custom.appName}

  readDocument:
    name: ${self:custom.appName}-read-document
    handler: document-reader/handler.run
    events:
      - httpApi:
          path: /document/{key}
          method: get
    environment:
      BUCKET_NAME: ${self:custom.appName}

  authorizeRequest:
    handler: request-authorizer/handler.run
    environment:
      PASSWORD: password
